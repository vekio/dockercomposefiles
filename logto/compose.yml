services:

  logto:
    image: svhd/logto:${LOGTO_VERSION:-latest}
    container_name: logto
    restart: unless-stopped
    networks:
      - logto
    depends_on:
      logto-db:
        condition: service_healthy
    entrypoint: [ "sh", "-c", "npm run cli db seed -- --swe && npm start" ]
    environment:
      TRUST_PROXY_HEADER: 1
      DB_URL: postgres://${LOGTO_DB_USER:-logto}:${LOGTO_DB_PASS:-insecurePass}@logto-db:5432/${LOGTO_DB_NAME:-logtodb}
      # Mandatory for GitPod to map host env to the container, thus GitPod can dynamically configure the public URL of Logto;
      # Or, you can leverage it for local testing.
      ENDPOINT:
      ADMIN_ENDPOINT:


  logto-db:
    image: postgres:${LOGTO_DB_VERSION:-14-alpine}
    container_name: logto-db
    restart: unless-stopped
    networks:
      - logto
    environment:
      POSTGRES_DB: ${LOGTO_DB_NAME:-logtodb}
      POSTGRES_USER: ${LOGTO_DB_USER:-logto}
      POSTGRES_PASSWORD: ${LOGTO_DB_PASS:-insecurePass}
    healthcheck:
      test: pg_isready -U "${LOGTO_DB_USER:-logto}" -d "${LOGTO_DB_NAME:-logtodb}"
      interval: 10s
      timeout: 2s
      retries: 10

networks:
  logto:
    name: logto
