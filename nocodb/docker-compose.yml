version: "3.7"

services:

  # traefik:
  #   image: traefik:latest
  #   container_name: traefik
  #   restart: unless-stopped
  #   networks:
  #     - proxy
  #   ports:
  #     - 80:80
  #   command:
  #     # - --log.level=DEBUG
  #     - --api=true
  #     - --providers.docker=true
  #     - --providers.docker.network=proxy
  #     - --providers.docker.exposedbydefault=false
  #     - --entrypoints.web.address=:80
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.traefik-rtr.entrypoints=web
  #     - traefik.http.routers.traefik-rtr.rule=Host(`traefik.${DOMAIN}`)
  #     - traefik.http.routers.traefik-rtr.service=api@internal

  db:
    image: postgres:12-alpine
    container_name: nocodb-db
    restart: unless-stopped
    networks:
      - nocodb
    volumes:
      - nocodb-db:/var/lib/postgresql/data:rw
    environment:
      - POSTGRES_DB=${NC_DB_NAME}
      - POSTGRES_USER=${NC_DB_USER}
      - POSTGRES_PASSWORD=${NC_DB_PASS}
    # labels:
    #   - traefik.enable=false
    healthcheck:
      test: pg_isready -U ${NC_DB_USER} -d ${NC_DB_NAME}
      interval: 10s
      timeout: 2s
      retries: 10

  nocodb:
    image: nocodb/nocodb:latest
    container_name: nocodb
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    networks:
      - nocodb
      # - proxy
    ports:
      - 8080:8080
    volumes:
      - nocodb-data:/usr/app/data:rw
    environment:
      - NC_DB=pg://db:5432?u=${NC_DB_USER}&p=${NC_DB_PASS}&d=${NC_DB_NAME}
      # - NC_PUBLIC_URL=http://nocodb.${DOMAIN}
      - NC_DISABLE_TELE=true
    # labels:
    #   - traefik.enable=true
    #   - traefik.http.routers.nocodb-rtr.entrypoints=web
    #   - traefik.http.routers.nocodb-rtr.rule=Host(`nocodb.${DOMAIN}`)
    #   - traefik.http.routers.nocodb-rtr.service=nocodb-svc
    #   - traefik.http.services.nocodb-svc.loadbalancer.server.port=8080

volumes:
  nocodb-db:
    name: nocodb-db
  nocodb-data:
    name: nocodb-data

networks:
  nocodb:
    name: nocodb
  # proxy:
  #   name: proxy
